//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using NHibernate template.
// Code is generated on: 2014-05-16 오후 2:23:13
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using NHibernate.Classic;
using System.Runtime.Serialization;

namespace HubCrawl.Data
{

    /// <summary>
    /// There are no comments for HubCrawl.Data.MemberShip, HubCrawl.Data in the schema.
    /// </summary>
    [DataContract(IsReference = true)]
    public partial class MemberShip : INotifyPropertyChanging, INotifyPropertyChanged, IValidatable, ICloneable {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);

        private string _UserID;

        private System.Nullable<System.DateTime> _CreateDate;

        private string _ConfirmationToken;

        private System.Nullable<bool> _IsConfirmed;

        private System.Nullable<System.DateTime> _LastPasswordFailureDate;

        private int _PasswordFailuresSinceLastSuccess;

        private string _Password;

        private System.Nullable<System.DateTime> _PasswordChangedDate;

        private string _PasswordSalt;

        private string _PasswordVerificationToken;

        private System.Nullable<System.DateTime> _PasswordVerificationTokenExpirationDate;

        private UserProfile _UserProfile;
    
        #region Extensibility Method Definitions
        
        /// <summary>
        /// There are no comments for OnCreated in the schema.
        /// </summary>
        partial void OnCreated();

        public override bool Equals(object obj)
        {
          MemberShip toCompare = obj as MemberShip;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.UserID, toCompare.UserID))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + UserID.GetHashCode();
          return hashCode;
        }
        /// <summary>
        /// There are no comments for OnUserIDChanging in the schema.
        /// </summary>
        partial void OnUserIDChanging(string value);
        
        /// <summary>
        /// There are no comments for OnUserIDChanged in the schema.
        /// </summary>
        partial void OnUserIDChanged();
        /// <summary>
        /// There are no comments for OnCreateDateChanging in the schema.
        /// </summary>
        partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
        
        /// <summary>
        /// There are no comments for OnCreateDateChanged in the schema.
        /// </summary>
        partial void OnCreateDateChanged();
        /// <summary>
        /// There are no comments for OnConfirmationTokenChanging in the schema.
        /// </summary>
        partial void OnConfirmationTokenChanging(string value);
        
        /// <summary>
        /// There are no comments for OnConfirmationTokenChanged in the schema.
        /// </summary>
        partial void OnConfirmationTokenChanged();
        /// <summary>
        /// There are no comments for OnIsConfirmedChanging in the schema.
        /// </summary>
        partial void OnIsConfirmedChanging(System.Nullable<bool> value);
        
        /// <summary>
        /// There are no comments for OnIsConfirmedChanged in the schema.
        /// </summary>
        partial void OnIsConfirmedChanged();
        /// <summary>
        /// There are no comments for OnLastPasswordFailureDateChanging in the schema.
        /// </summary>
        partial void OnLastPasswordFailureDateChanging(System.Nullable<System.DateTime> value);
        
        /// <summary>
        /// There are no comments for OnLastPasswordFailureDateChanged in the schema.
        /// </summary>
        partial void OnLastPasswordFailureDateChanged();
        /// <summary>
        /// There are no comments for OnPasswordFailuresSinceLastSuccessChanging in the schema.
        /// </summary>
        partial void OnPasswordFailuresSinceLastSuccessChanging(int value);
        
        /// <summary>
        /// There are no comments for OnPasswordFailuresSinceLastSuccessChanged in the schema.
        /// </summary>
        partial void OnPasswordFailuresSinceLastSuccessChanged();
        /// <summary>
        /// There are no comments for OnPasswordChanging in the schema.
        /// </summary>
        partial void OnPasswordChanging(string value);
        
        /// <summary>
        /// There are no comments for OnPasswordChanged in the schema.
        /// </summary>
        partial void OnPasswordChanged();
        /// <summary>
        /// There are no comments for OnPasswordChangedDateChanging in the schema.
        /// </summary>
        partial void OnPasswordChangedDateChanging(System.Nullable<System.DateTime> value);
        
        /// <summary>
        /// There are no comments for OnPasswordChangedDateChanged in the schema.
        /// </summary>
        partial void OnPasswordChangedDateChanged();
        /// <summary>
        /// There are no comments for OnPasswordSaltChanging in the schema.
        /// </summary>
        partial void OnPasswordSaltChanging(string value);
        
        /// <summary>
        /// There are no comments for OnPasswordSaltChanged in the schema.
        /// </summary>
        partial void OnPasswordSaltChanged();
        /// <summary>
        /// There are no comments for OnPasswordVerificationTokenChanging in the schema.
        /// </summary>
        partial void OnPasswordVerificationTokenChanging(string value);
        
        /// <summary>
        /// There are no comments for OnPasswordVerificationTokenChanged in the schema.
        /// </summary>
        partial void OnPasswordVerificationTokenChanged();
        /// <summary>
        /// There are no comments for OnPasswordVerificationTokenExpirationDateChanging in the schema.
        /// </summary>
        partial void OnPasswordVerificationTokenExpirationDateChanging(System.Nullable<System.DateTime> value);
        
        /// <summary>
        /// There are no comments for OnPasswordVerificationTokenExpirationDateChanged in the schema.
        /// </summary>
        partial void OnPasswordVerificationTokenExpirationDateChanged();
        /// <summary>
        /// There are no comments for OnUserProfileChanging in the schema.
        /// </summary>
        partial void OnUserProfileChanging(UserProfile value);

        /// <summary>
        /// There are no comments for OnUserProfileChanged in the schema.
        /// </summary>
        partial void OnUserProfileChanged();
        
        #endregion
        /// <summary>
        /// There are no comments for MemberShip constructor in the schema.
        /// </summary>
        public MemberShip()
        {
            this._PasswordFailuresSinceLastSuccess = 0;
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for UserID in the schema.
        /// </summary>
        [DataMember(Order=1)]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string UserID
        {
            get
            {
                return this._UserID;
            }
            set
            {
                if (this._UserID != value)
                {
                    this.OnUserIDChanging(value);
                    this.SendPropertyChanging();
                    this._UserID = value;
                    this.SendPropertyChanged("UserID");
                    this.OnUserIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [DataMember(Order=2)]
        public virtual System.Nullable<System.DateTime> CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if (this._CreateDate != value)
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ConfirmationToken in the schema.
        /// </summary>
        [DataMember(Order=3)]
        [System.ComponentModel.DataAnnotations.StringLength(128)]
        public virtual string ConfirmationToken
        {
            get
            {
                return this._ConfirmationToken;
            }
            set
            {
                if (this._ConfirmationToken != value)
                {
                    this.OnConfirmationTokenChanging(value);
                    this.SendPropertyChanging();
                    this._ConfirmationToken = value;
                    this.SendPropertyChanged("ConfirmationToken");
                    this.OnConfirmationTokenChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IsConfirmed in the schema.
        /// </summary>
        [DataMember(Order=4)]
        public virtual System.Nullable<bool> IsConfirmed
        {
            get
            {
                return this._IsConfirmed;
            }
            set
            {
                if (this._IsConfirmed != value)
                {
                    this.OnIsConfirmedChanging(value);
                    this.SendPropertyChanging();
                    this._IsConfirmed = value;
                    this.SendPropertyChanged("IsConfirmed");
                    this.OnIsConfirmedChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LastPasswordFailureDate in the schema.
        /// </summary>
        [DataMember(Order=5)]
        public virtual System.Nullable<System.DateTime> LastPasswordFailureDate
        {
            get
            {
                return this._LastPasswordFailureDate;
            }
            set
            {
                if (this._LastPasswordFailureDate != value)
                {
                    this.OnLastPasswordFailureDateChanging(value);
                    this.SendPropertyChanging();
                    this._LastPasswordFailureDate = value;
                    this.SendPropertyChanged("LastPasswordFailureDate");
                    this.OnLastPasswordFailureDateChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PasswordFailuresSinceLastSuccess in the schema.
        /// </summary>
        [DataMember(Order=6)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual int PasswordFailuresSinceLastSuccess
        {
            get
            {
                return this._PasswordFailuresSinceLastSuccess;
            }
            set
            {
                if (this._PasswordFailuresSinceLastSuccess != value)
                {
                    this.OnPasswordFailuresSinceLastSuccessChanging(value);
                    this.SendPropertyChanging();
                    this._PasswordFailuresSinceLastSuccess = value;
                    this.SendPropertyChanged("PasswordFailuresSinceLastSuccess");
                    this.OnPasswordFailuresSinceLastSuccessChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Password in the schema.
        /// </summary>
        [DataMember(Order=7)]
        [System.ComponentModel.DataAnnotations.StringLength(128)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string Password
        {
            get
            {
                return this._Password;
            }
            set
            {
                if (this._Password != value)
                {
                    this.OnPasswordChanging(value);
                    this.SendPropertyChanging();
                    this._Password = value;
                    this.SendPropertyChanged("Password");
                    this.OnPasswordChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PasswordChangedDate in the schema.
        /// </summary>
        [DataMember(Order=8)]
        public virtual System.Nullable<System.DateTime> PasswordChangedDate
        {
            get
            {
                return this._PasswordChangedDate;
            }
            set
            {
                if (this._PasswordChangedDate != value)
                {
                    this.OnPasswordChangedDateChanging(value);
                    this.SendPropertyChanging();
                    this._PasswordChangedDate = value;
                    this.SendPropertyChanged("PasswordChangedDate");
                    this.OnPasswordChangedDateChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PasswordSalt in the schema.
        /// </summary>
        [DataMember(Order=9)]
        [System.ComponentModel.DataAnnotations.StringLength(128)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string PasswordSalt
        {
            get
            {
                return this._PasswordSalt;
            }
            set
            {
                if (this._PasswordSalt != value)
                {
                    this.OnPasswordSaltChanging(value);
                    this.SendPropertyChanging();
                    this._PasswordSalt = value;
                    this.SendPropertyChanged("PasswordSalt");
                    this.OnPasswordSaltChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PasswordVerificationToken in the schema.
        /// </summary>
        [DataMember(Order=10)]
        [System.ComponentModel.DataAnnotations.StringLength(128)]
        public virtual string PasswordVerificationToken
        {
            get
            {
                return this._PasswordVerificationToken;
            }
            set
            {
                if (this._PasswordVerificationToken != value)
                {
                    this.OnPasswordVerificationTokenChanging(value);
                    this.SendPropertyChanging();
                    this._PasswordVerificationToken = value;
                    this.SendPropertyChanged("PasswordVerificationToken");
                    this.OnPasswordVerificationTokenChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PasswordVerificationTokenExpirationDate in the schema.
        /// </summary>
        [DataMember(Order=11)]
        public virtual System.Nullable<System.DateTime> PasswordVerificationTokenExpirationDate
        {
            get
            {
                return this._PasswordVerificationTokenExpirationDate;
            }
            set
            {
                if (this._PasswordVerificationTokenExpirationDate != value)
                {
                    this.OnPasswordVerificationTokenExpirationDateChanging(value);
                    this.SendPropertyChanging();
                    this._PasswordVerificationTokenExpirationDate = value;
                    this.SendPropertyChanged("PasswordVerificationTokenExpirationDate");
                    this.OnPasswordVerificationTokenExpirationDateChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UserProfile in the schema.
        /// </summary>
        [DataMember(Order=11, EmitDefaultValue=false)]
        public virtual UserProfile UserProfile
        {
            get
            {
                return this._UserProfile;
            }
            set
            {
                if (this._UserProfile != value)
                {
                    this.OnUserProfileChanging(value);
                    this.SendPropertyChanging();
                    this._UserProfile = value;
                    this.SendPropertyChanged("UserProfile");
                    this.OnUserProfileChanged();
                }
            }
        }
    
        #region IValidatable Members

        public virtual void Validate()
        {
            OnValidate();
        }

        partial void OnValidate();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            MemberShip obj = new MemberShip();
            obj.UserID = UserID;
            obj.CreateDate = CreateDate;
            obj.ConfirmationToken = ConfirmationToken;
            obj.IsConfirmed = IsConfirmed;
            obj.LastPasswordFailureDate = LastPasswordFailureDate;
            obj.PasswordFailuresSinceLastSuccess = PasswordFailuresSinceLastSuccess;
            obj.Password = Password;
            obj.PasswordChangedDate = PasswordChangedDate;
            obj.PasswordSalt = PasswordSalt;
            obj.PasswordVerificationToken = PasswordVerificationToken;
            obj.PasswordVerificationTokenExpirationDate = PasswordVerificationTokenExpirationDate;
            return obj;
        }

        #endregion
   
        public virtual event PropertyChangingEventHandler PropertyChanging;

        public virtual event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
